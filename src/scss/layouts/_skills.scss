.hidden {
  opacity: 0;
}
.skills {
  display: flex;
  position: relative;
  margin: 0 auto;
  // justify-content: center;
  align-items: center;
  width: 100%;
  padding-bottom: $p-md;

  &__wrapper {
    display: flex;
    flex-direction: column;
    position: relative;
    // width: 100%;
    justify-content: center;
    align-items: center;
    color: $c-font-primary;
    font-family: $f-montserrat;
    line-height: 1.5;
    padding: 0 $p-xs;
  }

  &__description {
    margin-bottom: $m-md;
  }

  &__description,
  &__ilustrations {
    display: flex;
    flex-direction: column;
    flex-shrink: 1;
    flex-grow: 1;
    align-items: center;
    justify-content: center;
    width: 100%;
    flex-basis: auto;
  }

  &__title {
    margin-bottom: 1.2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
  }
  &__text-content {
    width: inherit;
  }

  &__skill-set-container {
    margin: 0 auto;
    width: 100%;
  }
  &__skill-set {
    padding-inline-start: 0;
    margin: 0;
    text-indent: 0;
    list-style: none;
    position: relative;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    flex-wrap: wrap;
  }

  &__skill {
    position: relative;
    display: flex;
    width: 100%;
    flex-basis: auto;
    flex-grow: 1;
    flex-shrink: 1;
    align-items: center;
    justify-content: flex-start;
    margin-bottom: 1.5rem;

    @for $i from 1 through 8 {
      &:nth-of-type(#{$i}) .icon {
        z-index: calc(45 - (#{$i} * 5));
      }
    }
  }

  &__skill-icon {
    position: relative;
    display: flex;
    width: 50%;
    flex-basis: 50%;
    flex-shrink: 2;
    flex-grow: 1;
    justify-content: flex-end;
    align-items: center;
    overflow: visible;
    padding-right: $p-xs;

    .icon {
      display: flex;
      transform-origin: center bottom;
      background-color: rgba($c-bg-primary, 1);

      min-width: 3.8rem;
      max-width: 6.5rem;
      min-height: 3.8rem;
      max-height: 6.5rem;
      width: calc(4vw + 1rem);
      height: calc(4vw + 1rem);
      @include mq('ulwide') {
        max-width: 7rem;
        max-height: 7rem;
      }
      //icon color
      $c-icons: $c-bg-thirdly;
      svg {
        fill: $c-icons;
        width: 100%;
        height: 100%;
      }
      #sass,
      #gulp {
        fill-rule: evenodd;
      }
      .responsive,
      .git {
        fill: none;
      }

      .git {
        stroke: $c-icons;
        stroke-miterlimit: 10;
        stroke-width: 2px;
      }
    }
  }

  &__skill-name {
    width: 50%;
    flex-basis: 50%;
    flex-shrink: 1;
    flex-grow: 2;
    justify-content: flex-start;
    display: flex;
    align-items: center;
    align-self: stretch;

    p {
      text-transform: uppercase;
    }
  }

  /*------------MEDIAQUERIES----------------*/

  //mobile devices
  @include mq('small', max) {
    @for $i from 1 through 8 {
      //icon animation
      .skills__skill.animate:nth-of-type(#{$i}) .icon {
        animation: animIcon__#{$i}-mobile 1.3s ease-in-out 1 normal forwards;
        animation-direction: alternate;
      }
    }
  }

  //tablates and up
  @include mq('small') {
    &__wrapper {
      padding: 0 $p-md;
    }

    &__description {
      margin-bottom: $m-lg;
    }
    &__title {
      margin-bottom: 2rem;
    }

    &__skill-set {
      align-items: center;
      flex-direction: row;
      flex-shrink: 0;
    }
    &__skill {
      display: flex;
      min-width: 50%;
      flex-basis: 50%;
      margin-bottom: 2rem;

      @for $i from 1 through 8 {
        //icon animation
        &.animate:nth-of-type(#{$i}) .icon {
          z-index: calc(45 - (#{$i} * 5));
          animation: animIcon__#{$i}-desktop 1.3s ease-in-out 1 normal forwards;
          animation-direction: alternate;
          animation-delay: 0.3s;
        }
      }
    }
  }

  @include mq('large') {
    height: 100vh;
    min-height: 100vh;

    &__bg-vertical-txt {
      top: 0;
      left: 50%;
      transform: translateX(-50%);
      font-size: 13rem;

      @include mq('ulwide') {
        font-size: 15rem;
      }

      span {
        opacity: 0.3;
        filter: none;
      }
    }

    &__wrapper {
      flex-direction: row;
      flex-wrap: wrap;
      width: 100%;

      justify-content: center;
      align-items: center;
      margin: 0 auto;
      padding: 0 $p-md;
      @include mq('wide') {
        padding: 0;
      }
    }

    &__title {
      margin-bottom: 1.8rem;
      @include mq('ulwide') {
        margin-bottom: 2rem;
      }
    }

    &__text-content {
      width: inherit;
    }

    &__description {
      max-width: 45%;
      flex-basis: 45%;
      padding: 0;
      margin-bottom: 0;
      align-self: stretch;
    }

    &__ilustrations {
      width: 55%;
      flex-basis: 55%;
      margin-bottom: 0;
    }

    &__skill-icon {
      width: 30%;
      flex-basis: 30%;
    }
    &__skill-name {
      width: 70%;
      flex-basis: 70%;
    }
  }
}

//ANIMATIONS
//
//icon animation
$amountOfIcons: 8;
@for $i from 1 through $amountOfIcons {
  //for mobile devices
  $shadowY: calc(6rem - (0.15 * #{$i}));
  $shadowBlur: calc(2.8rem - (0.1 * #{$i}));
  $shadowOpasity: calc(0.02 + (0.01 * #{$i}));
  $MbShadowY: calc(6rem - (0.15 * #{$i}));
  $MbShadowBlur: calc(3rem - (0.1 * #{$i}));
  $MbShadowOpasity: calc(0.02 + (0.02 * #{$i}));
  $originX: 0;
  $fromX: 200%;
  $MbfromX: 150%;
  $originY: 0;

  @keyframes animIcon__#{$i}-mobile {
    0% {
      opacity: 0;
      box-shadow: 0 1rem 1rem rgba(55, 128, 109, 0.1);
      transform: translate3d($MbfromX, calc(700% - #{$i} * 100% - #{$i} * 15px), 0) scale3d(1, 1, 1)
        perspective(100px) rotateX(0deg);
    }
    7% {
      opacity: 1;
      box-shadow: 0 1rem 1rem rgba(55, 128, 109, 0.1);
      transform: translate3d($MbfromX, calc(700% - #{$i} * 100% - #{$i} * 15px), 0) scale3d(1, 1, 1)
        perspective(100px) rotateX(0deg);
    }
    15% {
      opacity: 1;
      box-shadow: 0 1rem 1rem rgba(55, 128, 109, 0.1);
      transform: translate3d($MbfromX, calc(700% - #{$i} * 100% - #{$i} * 15px), 0)
        scale3d(1.1, 0.9, 1) perspective(100px) rotateX(50deg);
    }
    65% {
      opacity: 1;
      box-shadow: 0 $shadowY $shadowBlur rgba(55, 128, 109, $shadowOpasity);
      transform: translate3d($MbfromX, calc(430% - #{$i} * 65% - #{$i} * 15px), 0)
        scale3d(1.1, 0.9, 1) perspective(100px) rotateX(50deg);
    }
    to {
      opacity: 1;
      box-shadow: none;
      transform: translate3d($originX, $originY, 0) scale3d(1, 1, 1) perspective(100px) rotateX(0);
    }
  }

  $margin: 10px;

  @if $i % 2 == 0 {
    $to: calc((50% + $margin) * #{$i});

    @keyframes animIcon__#{$i}-desktop {
      0% {
        opacity: 0;
        box-shadow: 0 1rem 1rem rgba(55, 128, 109, 0.1);
        transform: translate3d($fromX, calc(400% - #{$i} * 50% - (#{$i} + 1) * 10px), 0)
          scale3d(1, 1, 1) perspective(100px) rotateX(0deg);
      }
      15% {
        opacity: 1;
        box-shadow: 0 1rem 1rem rgba(55, 128, 109, 0.1);
        transform: translate3d($fromX, calc(400% - #{$i} * 50% - (#{$i} + 1) * 10px), 0)
          scale3d(1.1, 0.9, 1) perspective(100px) rotateX(50deg);
        // scale3d(1, 1, 1) perspective(100px) rotateX(0deg);
      }

      25% {
        opacity: 1;
        box-shadow: 0 1rem 1rem rgba(55, 128, 109, 0.1);
        transform: translate3d($fromX, calc(400% - #{$i} * 50% - (#{$i} + 1) * 10px), 0)
          scale3d(1.1, 0.9, 1) perspective(100px) rotateX(50deg);
      }
      65% {
        opacity: 1;
        box-shadow: 0 $shadowY $shadowBlur rgba(55, 128, 109, $shadowOpasity);
        transform: translate3d($fromX, calc(280% - #{$i} * 35% - (#{$i} + 1) * 10px), 0)
          scale3d(1.1, 0.9, 1) perspective(100px) rotateX(50deg);
      }
      to {
        opacity: 1;
        box-shadow: none;
        transform: translate3d($originX, $originY, 0) scale3d(1, 1, 1) perspective(100px) rotateX(0);
      }
    }
  } @else {
    $fromY: calc((200 + $margin) * (#{$i} - 1) * 1%);
    $to: calc((100 + $margin) *#{$i}* 1%);

    //$fromY: calc(350% - #{$i} * 50% - (#{$i} + 2) * 10px);
    $to: calc((50% + $margin) * #{$i});

    @keyframes animIcon__#{$i}-desktop {
      0% {
        opacity: 0;
        box-shadow: 0 1.5rem 2rem rgba(55, 128, 109, 0.1);
        transform: translate3d($fromX, calc(350% - #{$i} * 50% - (#{$i} + 2) * 10px), 0)
          scale3d(1, 1, 1) perspective(100px) rotateX(0deg);
      }
      15% {
        opacity: 1;
        box-shadow: 0 1.5rem 2rem rgba(55, 128, 109, 0.1);
        transform: translate3d($fromX, calc(350% - #{$i} * 50% - (#{$i} + 2) * 10px), 0)
          scale3d(1.1, 0.9, 1) perspective(100px) rotateX(50deg);
        //scale3d(1, 1, 1) perspective(100px) rotateX(0deg);
      }

      25% {
        opacity: 1;
        box-shadow: 0 1.5rem 2rem rgba(55, 128, 109, 0.1);
        transform: translate3d($fromX, calc(350% - #{$i} * 50% - (#{$i} + 2) * 10px), 0)
          scale3d(1.1, 0.9, 1) perspective(100px) rotateX(50deg);
      }
      65% {
        opacity: 1;
        box-shadow: 0 $shadowY $shadowBlur rgba(55, 128, 109, $shadowOpasity);
        transform: translate3d($fromX, calc(230% - #{$i} * 35% - (#{$i} + 1) * 10px), 0)
          scale3d(1.1, 0.9, 1) perspective(100px) rotateX(50deg);
      }
      to {
        opacity: 1;
        box-shadow: none;
        transform: translate3d($originX, $originY, 0) scale3d(1, 1, 1) perspective(100px) rotateX(0);
      }
    }
  }
}
//text animation

@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  /* IE10+ CSS styles go here */
}
